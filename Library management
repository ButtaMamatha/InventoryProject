{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6391904c-4891-4551-afac-cf321ee00a0b",
   "metadata": {},
   "outputs": [],
   "source": [
    "import tkinter as tk\n",
    "from tkinter import messagebox\n",
    "import sqlite3\n",
    "\n",
    "# Create a database or connect to an existing one\n",
    "conn = sqlite3.connect('library.db')\n",
    "c = conn.cursor()\n",
    "\n",
    "# Create table if not exists\n",
    "c.execute('''CREATE TABLE IF NOT EXISTS books\n",
    "             (id INTEGER PRIMARY KEY, title TEXT, author TEXT)''')\n",
    "conn.commit()\n",
    "\n",
    "def add_book():\n",
    "    title = title_entry.get()\n",
    "    author = author_entry.get()\n",
    "    if title and author:\n",
    "        c.execute(\"INSERT INTO books (title, author) VALUES (?, ?)\", (title, author))\n",
    "        conn.commit()\n",
    "        messagebox.showinfo(\"Success\", \"Book added successfully!\")\n",
    "    else:\n",
    "        messagebox.showerror(\"Error\", \"Please enter both title and author.\")\n",
    "\n",
    "def view_books():\n",
    "    c.execute(\"SELECT * FROM books\")\n",
    "    books = c.fetchall()\n",
    "    if books:\n",
    "        for book in books:\n",
    "            book_listbox.insert(tk.END, f\"{book[0]}. {book[1]} by {book[2]}\")\n",
    "    else:\n",
    "        messagebox.showinfo(\"Info\", \"No books found.\")\n",
    "\n",
    "# GUI Setup\n",
    "root = tk.Tk()\n",
    "root.title(\"Library Management System\")\n",
    "\n",
    "title_label = tk.Label(root, text=\"Title:\")\n",
    "title_label=tk.Label(text=\"Title\",fg=\"black\",bg=\"green\")\n",
    "title_label.grid(row=0, column=0, padx=5, pady=5)\n",
    "title_entry = tk.Entry(root)\n",
    "title_entry.grid(row=0, column=1, padx=5, pady=5)\n",
    "\n",
    "author_label = tk.Label(root, text=\"Author:\")\n",
    "author_label=tk.Label(text=\"Author\",fg=\"black\",bg=\"red\")\n",
    "author_label.grid(row=1, column=0, padx=5, pady=5)\n",
    "author_entry = tk.Entry(root)\n",
    "author_entry.grid(row=1, column=1, padx=5, pady=5)\n",
    "\n",
    "add_button = tk.Button(root, text=\"Add Book\", command=add_book)\n",
    "add_button=tk.Button(text=\"Add Book\",bg=\"black\",fg=\"gold\")\n",
    "add_button.grid(row=2, column=0, columnspan=2, padx=5, pady=5, sticky=\"WE\")\n",
    "\n",
    "view_button = tk.Button(root, text=\"View Books\", command=view_books)\n",
    "view_button.grid(row=3, column=0, columnspan=2, padx=5, pady=5, sticky=\"WE\")\n",
    "\n",
    "book_listbox = tk.Listbox(root)\n",
    "book_listbox.grid(row=4, column=0, columnspan=2, padx=5, pady=5, sticky=\"NSEW\")\n",
    "\n",
    "root.mainloop()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c6290287-d8a0-4e36-b18a-69351195cb18",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7f012be5-59a7-4cb1-b194-4043e692f615",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
